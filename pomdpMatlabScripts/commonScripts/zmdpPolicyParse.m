function policy = zmdpPolicyParse(filename)
%  eg. [maxValue action] = zmdpParse(filename,belief)
% 
% filename: is the name of the file output generated by zmdpSolver usually
% out.policy. 
% belief  : a (1,n) vector with the probability belief of states where n is
% the number of states in the POMDP model. 

file = textread(filename,'%s','commentstyle','shell','delimiter','\n','whitespace',' \b\t','bufsize',1000000);

% remove un-necessary info
k=0;
fileTemp = cell(length(file),1);
for i=1:length(file)
  leftCurlyBracket =strfind(file{i},'{');
  if isempty(leftCurlyBracket) && ~isempty(file{i})
    k=k+1;
    fileTemp{k}=file{i};
  end
end
file = fileTemp;
clear fileTemp;

k=0;
fileTemp = cell(length(file),1);
for i=1:length(file)
  rightCurlyBracket=strfind(file{i},'}');
  if isempty(rightCurlyBracket)
      k=k+1;
      fileTemp{k}=file{i};
  end
end
file = fileTemp;
clear fileTemp;

k=0;
fileTemp = cell(length(file),1);
for i=1:length(file)
  leftBracket =strfind(file{i},'[');
  if isempty(leftBracket)
    k=k+1;
    fileTemp{k}=file{i};
  end
end
file = fileTemp;
clear fileTemp;

k=0;
fileTemp = cell(length(file),1);
for i=1:length(file)
  rightBracket=strfind(file{i},']'); 
  if isempty(rightBracket)
    k=k+1;
    fileTemp{k}=file{i};
  end
end
file = fileTemp;
clear fileTemp;

k=0;
fileTemp = cell(length(file),1);
for i=1:length(file)
  policy = strfind(file{i},'policyType');
  if isempty(policy)
    k=k+1;
    fileTemp{k}=file{i};
  end
end
file = fileTemp;
clear fileTemp;

k=0;
fileTemp = cell(length(file),1);
for i=1:length(file)
  planes = strfind(file{i},'planes');
  if isempty(planes)
    k=k+1;
    fileTemp{k}=file{i};
  end
end
file = fileTemp;
clear fileTemp;

k=0;
fileTemp = cell(length(file),1);
for i=1:length(file)
  entries = strfind(file{i},'entries');
  if  isempty(entries)
    k=k+1;
    fileTemp{k}=file{i};
  end
end
file = fileTemp;
clear fileTemp;

lines = file;
for i=1:length(lines)
  % remove right Arrows
  rightArrow =strfind(lines{i},'=>');
  if ~isempty(rightArrow)
      lines{i}(rightArrow(1):rightArrow(1)+1)=[];
  end 
  % remove the commas
  comma =strfind(lines{i},',');
  s = length(comma);
  if ~isempty(comma)
      for j=0:(length(comma)-1)
          lines{i}((comma(j+1)-j):(comma(j+1)-j))=[];
      end
  end
end

nrLines = length(lines);
k=1;
policy.numPlanes = sscanf(lines{k},'%*s %d');

k=k+1;
for i=1:policy.numPlanes
    policy.planeActions(i) = sscanf(lines{k},'%*s %d');
    k=k+1;
    [numEntries] = sscanf(lines{k},'%*s %d');
    k=k+1;
    for j=1:numEntries
        x = sscanf(lines{k},'%d %f');
        policy.planeEntries{i,(x(1)+1)} = x(2);
        k=k+1;
    end
end
clear lines;
end